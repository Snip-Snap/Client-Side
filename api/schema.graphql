
type Mutation {
  # Client is return type. Will need to be changed in future. Return hashtoken?
  signupClient(input: NewClient!) : Response
  login(input: Login!): Response
  makeAppt(input: ApptData!): Apptinsert
}
type Query{
  refreshToken(input: Oldtoken!): Response @isAuthenticated
  clients: [Client!]! @isAuthenticated
  allshops: [Shop!]! 
  services: [Service!]!
  weeklyAppt(input: Shopidentifier!) : [AppointmentWeek!]!
  barbersAtShop(input: Shopidentifier!): [AllBarbersAtShop!]!
  receipt(input: Receiptinput!): PdfLink!
  pastapptbyClient(input: Apptinput!) : [ReceiptData!]!
  newapptbyClient(input: Apptinput!): [ReceiptData!]!
}

directive @isAuthenticated on FIELD_DEFINITION


input Oldtoken{
  token: String!
}


input Login{
  userName: String!
  password: String!
}

input Shopidentifier{
  shopID: ID!
}

input Receiptinput{
  apptID:     ID!
  clientID:   ID!
}

input Apptinput{
  clientID:    ID!
}

input ApptData{
  barberid:           String!
  clientUsername:     String!
  apptdate:           String!
  startTime:          String!
  endTime:            String!
  servicesids:        String!
  servicePrice:       String!
}



input NewClient {
  userName:       String!
  password:       String!
  firstName:      String!
  lastName:       String!
  gender:         String
  phoneNumber:    String!
}

type Client {
  clientID:       ID!
  userName:       String!
  password:       String!
  firstName:      String!
  lastName:       String!
  phoneNumber:    String!
  gender:         String
}

type Response{
  token: String!
}

type PdfLink{
  url: String!
}

type Apptinsert{
  okay: String!
}

type Shop{
  shopID:       ID!
  ShopName:     String!
  StreetAddr:   String!
  City:         String!
  State:        String!
  AreaCode:     String!
  Country:      String!
  Latitude:     String!
  Longitude:    String!
  Rating:       Float!
}

type Service{
  serviceID:            ID!
  serviceName:          String!
  serviceDescription:   String
  price:                Float
  customDuration:       Int!
}

type AppointmentWeek{
  apptID:               ID!
  barberID:             ID!
  apptDate:             String!
  startTime:            String!
  endTime:              String!
}

type AllBarbersAtShop{
  barberID:             ID!
  firstName:            String!
  lastName:             String!
}

type ReceiptData{
  apptID:             ID!
  clientID:           String!
  barberID:           String!
  paymenttype:        String!
  apptDate:           String!
  startTime:          String!
  endTime:            String!
  serviceName:        String!
  price:              String!
  shopName:           String!
  shopstreetaddr:     String!
  shopCity:           String!
  shopState:          String!
  barberfirstname:    String!
  barberlastname:     String!
  clientfirstname:    String!
  clientlastname:     String!
}



